<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       default-lazy-init="false"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
    <!--配置connection-factory，指定连接rabbit server参数 -->
    <rabbit:connection-factory id="connectionFactory"
                               username="${rabbitmq.username}" password="${rabbitmq.password}" host="${rabbitmq.host}"
                               port="${rabbitmq.port}"/>

    <!--通过指定下面的admin信息，当前proceducer中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- 标准的建立Queue的参数 -->
    <rabbit:queue-arguments id="amqpQueueArguments">
        <!-- 暂时没有 -->
    </rabbit:queue-arguments>


    <!--定义rabbit template用于数据的接收和发送 -->
    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory"/>

    <!--定义queue -->
    <rabbit:queue name="${demo.action.rmq.queue.name}" id="amqpTemplateRequestQueue"
                  queue-arguments="amqpQueueArguments"/>

    <!-- 消息接收者 -->
    <bean id="messageReceiver" class="com.boneix.base.jms.listener.RabbitMQListener"/>

    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="connectionFactory">
        <rabbit:listener queues="amqpTemplateRequestQueue" ref="messageReceiver"/>
    </rabbit:listener-container>

    <bean id="rabbitMQQueue" class="com.boneix.base.jms.test.rabbitmq.constants.RabbitMQQueue">
        <property name="demoQueue" value="${demo.action.rmq.queue.name}"/>
    </bean>

    <bean id="demoMessageHandler" class="com.boneix.base.jms.test.rabbitmq.handler.RMQDemoMessageHandler"
          init-method="init"/>

    <bean id="rmqDemoProducer" class="com.boneix.base.jms.test.rabbitmq.producer.RabbitProducer"/>

    <bean id="protoStuffSerializer" class="com.boneix.base.utils.serializer.impl.ProtoStuffSerializer"/>

</beans>